services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sherlock221
    ports:
      - "5432:5432"  
    networks:
      - app-network
    volumes:
      - ./initdb.d:/docker-entrypoint-initdb.d

  securitymicroservice:
    build:
      context: .
      dockerfile: SecurityMicroservice/Dockerfile
    image: securitymicroservice-image:latest
    ports:
      - "8080:8080"
      - "9095:9095"  
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sherlock221
    networks:
      - app-network

  cart:
    build:
      context: .
      dockerfile: cart/Dockerfile
    image: cart-image:latest
    ports:
      - "8082:8080"
      - "9091:9091"  
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cart
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sherlock221
    networks:
      - app-network

  products:
    build:
      context: .
      dockerfile: products/Dockerfile
    image: product-image:latest
    ports:
      - "8081:8080"
      - "9094:9094"  
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/products
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: sherlock221
    networks:
      - app-network

  fileMicroservice:
    build:
      context: .
      dockerfile: fileMicroservice/Dockerfile
    image: filemicroservice-image:latest
    ports:
      - "8083:8080"
      - "9090:9090"  
    networks:
      - app-network

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    image: gateway-image:latest
    ports:
      - "8084:8080"
    depends_on:
      - postgres 
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
